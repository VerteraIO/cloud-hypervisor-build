name: Build Cloud Hypervisor RPMs

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        el_version: [9, 10]
      fail-fast: false
    
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/verteraio/cloud-hypervisor-build/builder:el${{ matrix.el_version }}
    timeout-minutes: 20
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build RPM packages
      run: make all EL_VERSION=${{ matrix.el_version }}

    - name: Upload RPM artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cloud-hypervisor-rpms-el${{ matrix.el_version }}
        path: |
          ~/rpmbuild/RPMS/x86_64/*.rpm
          ~/rpmbuild/SRPMS/*.rpm
        retention-days: 30

    - name: Create release assets (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        mkdir -p release-assets
        cp ~/rpmbuild/RPMS/x86_64/*.rpm release-assets/
        cp ~/rpmbuild/SRPMS/*.rpm release-assets/
        ls -la release-assets/

    - name: Upload to release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*.rpm
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## Cloud Hypervisor RPM Packages
          
          This release includes RPM packages for Enterprise Linux ${{ matrix.el_version }}:
          
          - **Binary RPM**: Contains the cloud-hypervisor binary and systemd service
          - **Source RPM**: Contains the source code for rebuilding
          
          ### Installation
          ```bash
          sudo rpm -ivh cloud-hypervisor-*.el${{ matrix.el_version }}.x86_64.rpm
          sudo systemctl enable cloud-hypervisor
          ```
          
          ### Security Features
          - Static musl binary for enhanced security
          - Systemd service with security hardening
          - Dedicated service user with minimal privileges
          - CAP_NET_ADMIN capability for network operations
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
